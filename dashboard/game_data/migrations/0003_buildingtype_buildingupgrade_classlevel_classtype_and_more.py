# Generated by Django 4.2.13 on 2024-06-11 01:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '__first__'),
        ('game_data', '0002_alter_region_id_alter_sync_id_alter_town_id_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='BuildingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('size', models.IntegerField()),
                ('production_capacity', models.IntegerField()),
                ('build_location', models.CharField(max_length=255)),
                ('expansion_discount', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BuildingUpgrade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ClassLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('access', models.TextField()),
                ('details', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ClassType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CommonerPurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_requested', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_counter', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ConstructionRequirementItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('construction_requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.constructionrequirement')),
            ],
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.CharField(max_length=255)),
                ('requirement', models.CharField(max_length=255)),
                ('deadline', models.DateField()),
                ('obligations', models.CharField(max_length=255)),
                ('reward', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='ContractItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.contract')),
            ],
        ),
        migrations.CreateModel(
            name='GamePlayer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(blank=True, max_length=255, null=True)),
                ('leaderboard_position', models.IntegerField(blank=True, null=True)),
                ('rushes', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='HouseholdDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('delivery_1', 'Delivery Duty 1'), ('delivery_2', 'Delivery Duty 2'), ('knight_1', 'Knight Duty 1'), ('knight_2', 'Knight Duty 2'), ('knight_3', 'Knight Duty 3'), ('knight_4', 'Knight Duty 4')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('required_level', models.IntegerField(blank=True, null=True)),
                ('commoner_purchase', models.BooleanField(default=False)),
                ('town_purchase', models.BooleanField(default=False)),
                ('required_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_data.classtype')),
            ],
        ),
        migrations.CreateModel(
            name='MarketData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('town', models.CharField(max_length=255)),
                ('price', models.FloatField()),
                ('last_price', models.FloatField()),
                ('average_price', models.FloatField()),
                ('moving_average', models.FloatField()),
                ('highest_bid', models.FloatField()),
                ('lowest_ask', models.FloatField()),
                ('volume', models.IntegerField()),
                ('volume_prev_12', models.IntegerField()),
                ('bid_volume_10', models.IntegerField()),
                ('ask_volume_10', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.item')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerSustenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='PrestigeBonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.IntegerField()),
                ('label', models.CharField(choices=[('common', 'Common'), ('established', 'Established'), ('reputable', 'Reputable'), ('distinguished', 'Distinguished'), ('exalted', 'Exalted'), ('legend', 'Legend')], max_length=20)),
                ('description', models.CharField(max_length=255)),
                ('tenants_bonus', models.IntegerField(default=0)),
                ('total_tenants', models.IntegerField(default=0)),
                ('luxury_consumption_bonus', models.IntegerField(default=0)),
                ('total_luxury_consumption', models.IntegerField(default=0)),
                ('apprentice_bonus', models.IntegerField(default=0)),
                ('total_apprentices', models.IntegerField(default=0)),
                ('building_capacity_bonus', models.IntegerField(default=0)),
                ('total_building_capacity', models.IntegerField(default=0)),
                ('transport_capacity_bonus', models.IntegerField(default=0)),
                ('total_transport_capacity', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('labor_required', models.FloatField()),
                ('requires_master_level_worker', models.BooleanField(default=False)),
                ('class_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.classtype')),
                ('required_building_upgrade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_data.buildingupgrade')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeInput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('quantity', models.FloatField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inputs', to='game_data.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=255)),
                ('quantity', models.FloatField()),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outputs', to='game_data.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='SustenanceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='SustenanceItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('units_required', models.FloatField()),
                ('prestige_effect', models.FloatField()),
                ('prestige_penalty', models.FloatField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.sustenancecategory')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.item')),
            ],
        ),
        migrations.CreateModel(
            name='TileAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TileTax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_amount', models.FloatField()),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.tileattribute')),
            ],
        ),
        migrations.CreateModel(
            name='TownPurchaseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_requested', models.IntegerField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.item')),
            ],
        ),
        migrations.CreateModel(
            name='TransportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255)),
                ('capacity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Turn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('turn_number', models.IntegerField()),
                ('month', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('work_capacity', models.IntegerField(choices=[(15, '15'), (25, '25')])),
                ('is_head_of_household', models.BooleanField(default=False)),
                ('current_building', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.building')),
                ('current_duty', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_data.householdduty')),
                ('current_transport', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='dashboard.transport')),
            ],
        ),
        migrations.CreateModel(
            name='WorkerClassLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_master', models.BooleanField(default=False)),
                ('class_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.classtype')),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.classlevel')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.worker')),
            ],
        ),
        migrations.AddField(
            model_name='sync',
            name='turn_number',
            field=models.IntegerField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='town',
            name='climate',
            field=models.CharField(choices=[('cold', 'Cold'), ('warm', 'Warm')], default='warm', max_length=10),
        ),
        migrations.AddField(
            model_name='town',
            name='growth_rate',
            field=models.FloatField(default=0.0),
        ),
        migrations.DeleteModel(
            name='TownMarketData',
        ),
        migrations.AddField(
            model_name='townpurchaserequest',
            name='town',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.town'),
        ),
        migrations.AddField(
            model_name='playersustenance',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.sustenanceitem'),
        ),
        migrations.AddField(
            model_name='playersustenance',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.gameplayer'),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='head_of_household',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='head_of_household_for', to='game_data.worker'),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='town',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_data.town'),
        ),
        migrations.AddField(
            model_name='gameplayer',
            name='workers',
            field=models.ManyToManyField(blank=True, to='game_data.worker'),
        ),
        migrations.AddField(
            model_name='contractitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.item'),
        ),
        migrations.AddField(
            model_name='contract',
            name='assigned_player',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='game_data.gameplayer'),
        ),
        migrations.AddField(
            model_name='contract',
            name='deadline_turn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.turn'),
        ),
        migrations.AddField(
            model_name='contract',
            name='items',
            field=models.ManyToManyField(through='game_data.ContractItem', to='game_data.item'),
        ),
        migrations.AddField(
            model_name='contract',
            name='town',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.town'),
        ),
        migrations.AddField(
            model_name='constructionrequirementitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.item'),
        ),
        migrations.AddField(
            model_name='constructionrequirement',
            name='items',
            field=models.ManyToManyField(through='game_data.ConstructionRequirementItem', to='game_data.item'),
        ),
        migrations.AddField(
            model_name='commonerpurchaserequest',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.item'),
        ),
        migrations.AddField(
            model_name='commonerpurchaserequest',
            name='town',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.town'),
        ),
        migrations.AddField(
            model_name='buildingupgrade',
            name='construction_requirement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game_data.constructionrequirement'),
        ),
        migrations.AddField(
            model_name='buildingupgrade',
            name='prerequisites',
            field=models.ManyToManyField(blank=True, related_name='required_by', to='game_data.buildingupgrade'),
        ),
        migrations.AddField(
            model_name='buildingtype',
            name='construction_requirement',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='game_data.constructionrequirement'),
        ),
        migrations.AddField(
            model_name='buildingtype',
            name='required_tile_attributes',
            field=models.ManyToManyField(blank=True, to='game_data.tileattribute'),
        ),
        migrations.AlterField(
            model_name='sync',
            name='turn',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game_data.turn'),
        ),
    ]
